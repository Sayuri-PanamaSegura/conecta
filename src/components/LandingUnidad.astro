---
import ScrollReveal from '../components/movimiento/ScrollReveal.jsx';
import GrowCircle  from './movimiento/GrowCircle';
import BotonFlotanteAnimado from './movimiento/BotonFlotanteAnimado';
import HeroCriptoScroll from './movimiento/HeroCriptoScroll';
// Recibimos props flexibles
const {
  imagenHero = "",
  fraseHero = [],
  tipoAnimacion="",
    HeroAnimado = null, // <- nuevo
  fraseHeroAnimada="",
  colorFrase = "#800080",
  textoBoton = "Agenda demo",
  colorBoton = "#800080",
  tarjetas = [],
  tituloTarjetas = "",
  carrusel = null,
  autoplay=true,
  unidad= "",
   fraseSecundaria = "", 
} = Astro.props;

import HeroTransferencia from "../components/movimiento/HeroTransferencia.jsx";


---


<section class="bg-[#f5f5f5] pt-24 pb-12 px-6 md:px-12">

   <ScrollReveal client:visible>
  <!-- Flecha de regreso -->
  <div class="max-w-6xl mx-auto mb-6">
    <a href="/#servicios" class="flex items-center text-sm hover:underline transition" style={`color: ${colorFrase}`}>
      <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" d="M15 19l-7-7 7-7" />
      </svg>
      
    </a>
  </div>

  <!-- Imagen principal -->
  {imagenHero && (
    <div class="flex justify-center mb-12">
      <img src={imagenHero} alt="Imagen principal" class="max-w-xs md:max-w-md" />
    </div>
  )}


{Astro.slots.heroAnimado ? (
  <slot name="heroAnimado" />
) : (
 <div class="max-w-4xl mx-auto text-center mb-4 text-5xl md:text-5xl font-light text-gray-900 leading-snug whitespace-pre-line">
{fraseHero.map((parte, idx) => (
      <div key={idx} class="inline-block mr-1">
        {parte.animate ? (
          tipoAnimacion === "transferencia" ? (
            <HeroTransferencia titulo={parte.text} client:visible />
          ) : tipoAnimacion === "cripto" ? (
            <HeroCriptoScroll titulo={parte.text} client:visible />
          ) : (
            <span class={parte.bold ? "font-semibold" : ""}>{parte.text}</span>
          )
        ) : (
          <span class={parte.bold ? "font-semibold" : ""}>{parte.text}</span>
        )}
      </div>
    ))}
  </div>
)}

  <!-- Frase secundaria opcional -->
{fraseSecundaria && (
  <div class="max-w-3xl mx-auto text-center mb-0 text-base md:text-lg text-black leading-relaxed">
 {fraseSecundaria}
  </div>
)}

<!-- Botón -->
<section class="text-center my-12">
  <BotonFlotanteAnimado texto={textoBoton} href="/contacto" color={colorFrase} client:load/>

</section>
  <!-- Carrusel (si se manda como slot o prop) -->
  <slot name="carrusel" />
  {carrusel && (
    <div class="mt-12">
      <div class="max-w-8xl mx-auto">
        {carrusel}
      </div>
    </div>
  )}
 </ScrollReveal>
  

</section>
<section class="bg-white py-24 px-6 md:px-12">

<!-- Título de sección de tarjetas -->
{tituloTarjetas && (

 <div class="max-w-4xl mx-auto mb-16">
     <h2 class="text-2xl sm:text-2x md:text-3xl lg:text-4xl font-medium text-black text-center mb-4">
   
      {Array.isArray(tituloTarjetas)
        ? tituloTarjetas.map(part =>
            part.bold
              ? <span class="font-semibold">{part.text}</span>
              : <span>{part.text}</span>
          )
        : tituloTarjetas
      }
    </h2>
  </div>
)}


<!-- Contenedor de tarjetas -->
<div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-8 max-w-4xl mx-auto">

  {tarjetas.map((item) => (
    <div class="flex flex-col items-center text-center md:items-start md:text-left">
      <GrowCircle client:visible>
        <div
          class="mb-4 w-20 h-20 rounded-full flex items-center justify-center border-2"
          style={`background: linear-gradient(to bottom, #ffffff, #e5e7eb); border-color: ${colorFrase};`}
        >
          <img
            src={item.imagen}
            alt={item.titulo}
            class="w-10 h-10 object-contain"
          />
        </div>
      </GrowCircle>

      <p class="text-black font-light leading-relaxed text-lg whitespace-pre-line">
        {item.frase.map((part) =>
          part.bold
            ? <span class="font-semibold">{part.text}</span>
            : <span>{part.text}</span>
        )}
      </p>
    </div>
  ))}

</div>
</section>