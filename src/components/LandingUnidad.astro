---
import ScrollReveal from '../components/movimiento/ScrollReveal.jsx';
import GrowCircle  from './movimiento/GrowCircle';
import AnimatedButton from '../components/movimiento/AnimatedButton';
// Recibimos props flexibles
const {
  imagenHero = "",
  fraseHero = [],
  colorFrase = "#800080",
  textoBoton = "Agenda demo",
  colorBoton = "#800080",
  tarjetas = [],
  tituloTarjetas = "",
  carrusel = null,
  autoplay=true,
   fraseSecundaria = "", 
} = Astro.props;
---

<section class="bg-white py-24 px-6 md:px-12">
   <ScrollReveal client:visible>
  <!-- Flecha de regreso -->
  <div class="max-w-6xl mx-auto mb-6">
    <a href="/#servicios" class="flex items-center text-sm hover:underline transition" style={`color: ${colorFrase}`}>
      <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" d="M15 19l-7-7 7-7" />
      </svg>
      
    </a>
  </div>

  <!-- Imagen principal -->
  {imagenHero && (
    <div class="flex justify-center mb-12">
      <img src={imagenHero} alt="Imagen principal" class="max-w-xs md:max-w-md" />
    </div>
  )}

  <!-- Frase principal con palabras destacadas -->
  <div class="max-w-4xl mx-auto text-center mb-10 text-5xl md:text-5xl font-light text-gray-900 leading-snug whitespace-pre-line">
    {fraseHero.map((parte) =>
      parte.bold
        ? <span style={`color: ${colorFrase}`} class="font-semibold">{parte.text}</span>
        : <span>{parte.text}</span>
    )}
  </div>
  <!-- Frase secundaria opcional -->
{fraseSecundaria && (
  <div class="max-w-3xl mx-auto text-center mb-10 text-base md:text-lg text-black leading-relaxed">
    {fraseSecundaria}
  </div>
)}


  <!-- Botón -->
 <AnimatedButton textoBoton={textoBoton} coloresBoton={colorFrase} href="/contacto" client:load />


  <!-- Carrusel (si se manda como slot o prop) -->
  <slot name="carrusel" />
  {carrusel && (
    <div class="mt-12">
      <div class="max-w-8xl mx-auto">
        {carrusel}
      </div>
    </div>
  )}
 </ScrollReveal>
  <!-- Título de sección de tarjetas -->
{tituloTarjetas && (

  <div class="max-w-4xl mx-auto mb-12 mt-20">
    <h2 class="text-3xl md:text-3xl font-medium text-black whitespace-pre-line">

      {Array.isArray(tituloTarjetas)
        ? tituloTarjetas.map(part =>
            part.bold
              ? <span class="font-semibold">{part.text}</span>
              : <span>{part.text}</span>
          )
        : tituloTarjetas
      }
    </h2>
  </div>
)}



  <!-- Tarjetas con íconos y frases -->
  <div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-8 max-w-4xl mx-auto">
    {tarjetas.map((item) => (
      <div class="flex flex-col items-start text-left">
       <GrowCircle client:visible>
  <div
    class="mb-4 w-20 h-20 rounded-full flex items-center justify-center border-2"
    style={`background: linear-gradient(to bottom, #ffffff, #e5e7eb); border-color: ${colorFrase};`}
  >
    <img
      src={item.imagen}
      alt={item.titulo}
      class="w-10 h-10 object-contain"
    />
  </div>
</GrowCircle>

        <p class="text-black font-light leading-relaxed text-lg whitespace-pre-line">
          {item.frase.map((part) =>
            part.bold
              ? <span class="font-semibold">{part.text}</span>
              : <span>{part.text}</span>
          )}
        </p>
      </div>
    ))}
  </div>
</section>
